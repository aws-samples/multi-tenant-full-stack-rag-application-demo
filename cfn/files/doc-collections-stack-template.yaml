Outputs:
  DocCollectionsHandlerFunctionArnOutput:
    Export:
      Name: DocCollectionsHandlerFunctionArn
    Value: 
      Fn::GetAtt:
        - DocCollectionsHandlerFunctionB290B79C
        - Arn
Resources:
  DocCollectionsTable2BF99462F:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: partition_key
          AttributeType: S
        - AttributeName: sort_key
          AttributeType: S
        - AttributeName: collection_id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: by_collection_id
          KeySchema:
            - AttributeName: collection_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: partition_key
          KeyType: HASH
        - AttributeName: sort_key
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_IMAGE
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsTable2/DocCollectionsTable2/Resource
  DocCollectionsHandlerFunctionServiceRoleAA001F3A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHandlerFunction/ServiceRole/Resource
  DocCollectionsHandlerFunctionServiceRoleDefaultPolicy0DDCBC82:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DocCollectionsTable2BF99462F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DocCollectionsTable2BF99462F
                        - Arn
                    - /index/*
          - Action:
              - ssm:GetParameter
              - ssm:GetParametersByPath
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter/mtfsrad-b-dev*
          - Action:
              - execute-api:Invoke
              - lambda:InvokeFunction
            Effect: Allow
            Resource: "*"
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              !ImportValue CognitoAuthenticatedRoleArn
        Version: "2012-10-17"
      PolicyName: DocCollectionsHandlerFunctionServiceRoleDefaultPolicy0DDCBC82
      Roles:
        - Ref: DocCollectionsHandlerFunctionServiceRoleAA001F3A
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHandlerFunction/ServiceRole/DefaultPolicy/Resource
  DocCollectionsHandlerFunctionB290B79C:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - x86_64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 184384c1173fcbb44971aedea3d20e71b27e2b5f89c467c17c8bc04426c2be66.zip
      Environment:
        Variables:
          DOCUMENT_COLLECTIONS_TABLE:
            Ref: DocCollectionsTable2BF99462F
          STACK_NAME: mtfsrad-b-dev
      Handler: multi_tenant_full_stack_rag_application.document_collections_handler.document_collections_handler.handler
      MemorySize: 512
      Role:
        Fn::GetAtt:
          - DocCollectionsHandlerFunctionServiceRoleAA001F3A
          - Arn
      Runtime: python3.11
      Timeout: 60
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue AppSecurityGroupId
        SubnetIds:
          - !ImportValue PrivateIsolatedSubnetId1
          - !ImportValue PrivateIsolatedSubnetId2
    DependsOn:
      - DocCollectionsHandlerFunctionServiceRoleDefaultPolicy0DDCBC82
      - DocCollectionsHandlerFunctionServiceRoleAA001F3A
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHandlerFunction/Resource
      aws:asset:path: asset.184384c1173fcbb44971aedea3d20e71b27e2b5f89c467c17c8bc04426c2be66
      aws:asset:is-bundled: true
      aws:asset:property: Code
  DocCollectionsFunctionNameBDB96C18:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /mtfsrad-b-dev/document_collections_handler_function_name
      Type: String
      Value:
        Ref: DocCollectionsHandlerFunctionB290B79C
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsFunctionName/Resource
  DocCollectionsOrigin556ACDC9:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /mtfsrad-b-dev/origin_document_collections_handler
      Type: String
      Value:
        Ref: DocCollectionsHandlerFunctionB290B79C
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsOrigin/Resource
  DocCollectionsHttpApi5C55BE71:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: document_collections
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/Resource
  DocCollectionsHttpApiDefaultStageB237AB9C:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: DocCollectionsHttpApi5C55BE71
      AutoDeploy: true
      StageName: $default
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/DefaultStage/Resource
  DocCollectionsHttpApiGETdocumentcollectionsDocCollectionsLambdaIntegration38564B93:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: DocCollectionsHttpApi5C55BE71
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - DocCollectionsHandlerFunctionB290B79C
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/GET--document_collections/DocCollectionsLambdaIntegration/Resource
  DocCollectionsHttpApiGETdocumentcollectionsDocCollectionsLambdaIntegrationPermissionCEA4F5DE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DocCollectionsHandlerFunctionB290B79C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: DocCollectionsHttpApi5C55BE71
            - /*/*/document_collections
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/GET--document_collections/DocCollectionsLambdaIntegration-Permission
  DocCollectionsHttpApiGETdocumentcollectionsDCA473AF:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: DocCollectionsHttpApi5C55BE71
      AuthorizationType: JWT
      AuthorizerId:
        Ref: DocCollectionsHttpApiDocCollectionsHttpAuthorizerAE571FE0
      RouteKey: GET /document_collections
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: DocCollectionsHttpApiGETdocumentcollectionsDocCollectionsLambdaIntegration38564B93
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/GET--document_collections/Resource
  DocCollectionsHttpApiDocCollectionsHttpAuthorizerAE571FE0:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId:
        Ref: DocCollectionsHttpApi5C55BE71
      AuthorizerType: JWT
      IdentitySource:
        - $request.header.Authorization
      JwtConfiguration:
        Audience:
          - !ImportValue CognitoUserPoolClientId
        Issuer:
          Fn::Join:
            - ""
            - - https://cognito-idp.
              - Ref: AWS::Region
              - .amazonaws.com/
              - !ImportValue CognitoUserPoolId
      Name: DocCollectionsHttpAuthorizer
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/DocCollectionsHttpAuthorizer/Resource
  DocCollectionsHttpApiPOSTdocumentcollectionsDocCollectionsLambdaIntegrationPermissionE5C9F2EE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DocCollectionsHandlerFunctionB290B79C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: DocCollectionsHttpApi5C55BE71
            - /*/*/document_collections
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/POST--document_collections/DocCollectionsLambdaIntegration-Permission
  DocCollectionsHttpApiPOSTdocumentcollections8F3EAE37:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: DocCollectionsHttpApi5C55BE71
      AuthorizationType: JWT
      AuthorizerId:
        Ref: DocCollectionsHttpApiDocCollectionsHttpAuthorizerAE571FE0
      RouteKey: POST /document_collections
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: DocCollectionsHttpApiGETdocumentcollectionsDocCollectionsLambdaIntegration38564B93
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/POST--document_collections/Resource
  DocCollectionsHttpApiGETdocumentcollectionscollectionidlimitlastevalkeyDocCollectionsLambdaIntegrationPermissionAB640420:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DocCollectionsHandlerFunctionB290B79C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: DocCollectionsHttpApi5C55BE71
            - /*/*/document_collections/{collection_id}/{limit}/{last_eval_key}
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/GET--document_collections--{collection_id}--{limit}--{last_eval_key}/DocCollectionsLambdaIntegration-Permission
  DocCollectionsHttpApiGETdocumentcollectionscollectionidlimitlastevalkeyA5BB118A:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: DocCollectionsHttpApi5C55BE71
      AuthorizationType: JWT
      AuthorizerId:
        Ref: DocCollectionsHttpApiDocCollectionsHttpAuthorizerAE571FE0
      RouteKey: GET /document_collections/{collection_id}/{limit}/{last_eval_key}
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: DocCollectionsHttpApiGETdocumentcollectionsDocCollectionsLambdaIntegration38564B93
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/GET--document_collections--{collection_id}--{limit}--{last_eval_key}/Resource
  DocCollectionsHttpApiGETdocumentcollectionscollectionidDocCollectionsLambdaIntegrationPermission13C81061:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DocCollectionsHandlerFunctionB290B79C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: DocCollectionsHttpApi5C55BE71
            - /*/*/document_collections/{collection_id}
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/GET--document_collections--{collection_id}/DocCollectionsLambdaIntegration-Permission
  DocCollectionsHttpApiGETdocumentcollectionscollectionid3C2AC01C:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: DocCollectionsHttpApi5C55BE71
      AuthorizationType: JWT
      AuthorizerId:
        Ref: DocCollectionsHttpApiDocCollectionsHttpAuthorizerAE571FE0
      RouteKey: GET /document_collections/{collection_id}
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: DocCollectionsHttpApiGETdocumentcollectionsDocCollectionsLambdaIntegration38564B93
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/GET--document_collections--{collection_id}/Resource
  DocCollectionsHttpApiDELETEdocumentcollectionscollectionidDocCollectionsLambdaIntegrationPermissionB8954F4F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DocCollectionsHandlerFunctionB290B79C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: DocCollectionsHttpApi5C55BE71
            - /*/*/document_collections/{collection_id}
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/DELETE--document_collections--{collection_id}/DocCollectionsLambdaIntegration-Permission
  DocCollectionsHttpApiDELETEdocumentcollectionscollectionid055650C1:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: DocCollectionsHttpApi5C55BE71
      AuthorizationType: JWT
      AuthorizerId:
        Ref: DocCollectionsHttpApiDocCollectionsHttpAuthorizerAE571FE0
      RouteKey: DELETE /document_collections/{collection_id}
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: DocCollectionsHttpApiGETdocumentcollectionsDocCollectionsLambdaIntegration38564B93
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/DELETE--document_collections--{collection_id}/Resource
  DocCollectionsHttpApiDELETEdocumentcollectionscollectionidfilenameDocCollectionsLambdaIntegrationPermission0DB682AE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DocCollectionsHandlerFunctionB290B79C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: DocCollectionsHttpApi5C55BE71
            - /*/*/document_collections/{collection_id}/{file_name}
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/DELETE--document_collections--{collection_id}--{file_name}/DocCollectionsLambdaIntegration-Permission
  DocCollectionsHttpApiDELETEdocumentcollectionscollectionidfilenameDF706E55:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: DocCollectionsHttpApi5C55BE71
      AuthorizationType: JWT
      AuthorizerId:
        Ref: DocCollectionsHttpApiDocCollectionsHttpAuthorizerAE571FE0
      RouteKey: DELETE /document_collections/{collection_id}/{file_name}
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: DocCollectionsHttpApiGETdocumentcollectionsDocCollectionsLambdaIntegration38564B93
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/DELETE--document_collections--{collection_id}--{file_name}/Resource
  DocCollectionsHttpApiPUTdocumentcollectionscollectionidsharewithuseremailDocCollectionsLambdaIntegrationPermission311E21AE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DocCollectionsHandlerFunctionB290B79C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: DocCollectionsHttpApi5C55BE71
            - /*/*/document_collections/{collection_id}/{share_with_user_email}
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/PUT--document_collections--{collection_id}--{share_with_user_email}/DocCollectionsLambdaIntegration-Permission
  DocCollectionsHttpApiPUTdocumentcollectionscollectionidsharewithuseremail7D0D9EEE:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: DocCollectionsHttpApi5C55BE71
      AuthorizationType: JWT
      AuthorizerId:
        Ref: DocCollectionsHttpApiDocCollectionsHttpAuthorizerAE571FE0
      RouteKey: PUT /document_collections/{collection_id}/{share_with_user_email}
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: DocCollectionsHttpApiGETdocumentcollectionsDocCollectionsLambdaIntegration38564B93
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/PUT--document_collections--{collection_id}--{share_with_user_email}/Resource
  DocCollectionsHttpApiOPTIONSproxyDocCollectionsLambdaIntegrationPermission0E4692ED:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DocCollectionsHandlerFunctionB290B79C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: DocCollectionsHttpApi5C55BE71
            - /*/*/{proxy+}
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/OPTIONS--{proxy+}/DocCollectionsLambdaIntegration-Permission
  DocCollectionsHttpApiOPTIONSproxyEFDCA811:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: DocCollectionsHttpApi5C55BE71
      AuthorizationType: NONE
      RouteKey: OPTIONS /{proxy+}
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: DocCollectionsHttpApiGETdocumentcollectionsDocCollectionsLambdaIntegration38564B93
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApi/OPTIONS--{proxy+}/Resource
  DocCollectionsHttpApiUrl22E21329:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /mtfsrad-b-dev/doc_collections_handler_api_url
      Type: String
      Value:
        Fn::Join:
          - ""
          - - https://
            - Ref: DocCollectionsHttpApi5C55BE71
            - .execute-api.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/DocCollectionsHttpApiUrl/Resource
  CognitoAuthRoleRefPolicymtfsradbdevDocumentCollectionsHandlerStackCognitoAuthRoleRefC442369D9568E6C0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DocCollectionsHandlerFunctionB290B79C
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DocCollectionsHandlerFunctionB290B79C
                        - Arn
                    - :*
          - Action:
              - apigateway:DELETE
              - apigateway:GET
              - apigateway:POST
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:apigateway:"
                  - Ref: AWS::Region
                  - ::/apis/
                  - Ref: DocCollectionsHttpApi5C55BE71
                  - /*
        Version: "2012-10-17"
      PolicyName: PolicymtfsradbdevDocumentCollectionsHandlerStackCognitoAuthRoleRefC442369D
      Roles:
        - Fn::Select:
            - 1
            - Fn::Split:
                - /
                - Fn::Select:
                    - 5
                    - Fn::Split:
                        - ":"
                        - !ImportValue CognitoAuthenticatedRoleArn
    Metadata:
      aws:cdk:path: mtfsrad-b-dev/DocumentCollectionsHandlerStack/CognitoAuthRoleRef/PolicymtfsradbdevDocumentCollectionsHandlerStackCognitoAuthRoleRefC442369D/Resource
