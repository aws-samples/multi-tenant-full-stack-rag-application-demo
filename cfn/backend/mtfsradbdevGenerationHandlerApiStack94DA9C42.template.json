{
 "Resources": {
  "GhCognitoAuthRoleRefPolicymtfsradbdevGenerationHandlerApiStackGhCognitoAuthRoleRef55C2622EEF908316": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenerationHandlerFunction7E4CE896",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenerationHandlerFunction7E4CE896",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PolicymtfsradbdevGenerationHandlerApiStackGhCognitoAuthRoleRef55C2622E",
    "Roles": [
     {
      "Fn::Select": [
       1,
       {
        "Fn::Split": [
         "/",
         {
          "Fn::Select": [
           5,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::ImportValue": "mtfsradbdevAuthProviderStackCCE112F5:ExportsOutputFnGetAttCognitoStackNestedStackCognitoStackNestedStackResource95DF2EBAOutputsmtfsradbdevAuthProviderStackCognitoStackCognitoIdentityPoolAuthenticatedRole7703D556Arn606C0A72"
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GhCognitoAuthRoleRef/PolicymtfsradbdevGenerationHandlerApiStackGhCognitoAuthRoleRef55C2622E/Resource"
   }
  },
  "GenerationHandlerFunctionServiceRole191FABCF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerFunction/ServiceRole/Resource"
   }
  },
  "GenerationHandlerFunctionServiceRoleDefaultPolicyD6730C32": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssm:GetParameter",
        "ssm:GetParametersByPath"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/mtfsrad-b-dev*"
         ]
        ]
       }
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "mtfsradbdevAuthProviderStackCCE112F5:ExportsOutputFnGetAttCognitoStackNestedStackCognitoStackNestedStackResource95DF2EBAOutputsmtfsradbdevAuthProviderStackCognitoStackCognitoAuthProviderFunction314FA51DArnCBC57E5D"
        },
        {
         "Fn::ImportValue": "mtfsradbdevBedrockProviderStack1AABA887:ExportsOutputFnGetAttBedrockProviderFunction99614D39ArnA074F27C"
        },
        {
         "Fn::ImportValue": "mtfsradbdevDocumentCollectionsHandlerStack7FE01056:ExportsOutputFnGetAttDocCollectionsHandlerFunctionB290B79CArn454F6B72"
        },
        {
         "Fn::ImportValue": "mtfsradbdevEmbeddingsProviderStack3C343CED:ExportsOutputFnGetAttEmbeddingsProviderFunction749E762AArn0A103CE4"
        },
        {
         "Fn::ImportValue": "mtfsradbdevIngestionProviderStack7EBE4178:ExportsOutputFnGetAttIngestionStatusProviderFunctionE9E064BFArn2D6E7177"
        },
        {
         "Fn::ImportValue": "mtfsradbdevPromptTemplateHandlerStack05579D4E:ExportsOutputFnGetAttPromptTemplateHandlerFunction2A6BF5FFArnCCEB5505"
        },
        {
         "Fn::ImportValue": "mtfsradbdevVectorStoreProviderStackD15A38D1:portsOutputFnGetAttOpenSearchManagedStackNestedStackOpenSearchManagedStackNestedStackResource253201F9OutputsmtfsradbdevVectorStoreProviderStackOpenSearchManagedStackVectorStoreProviderFunction71969801Arn911E4BA2"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "mtfsradbdevBedrockProviderStack1AABA887:ExportsOutputFnGetAttBedrockProviderFunction99614D39ArnA074F27C"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "mtfsradbdevDocumentCollectionsHandlerStack7FE01056:ExportsOutputFnGetAttDocCollectionsHandlerFunctionB290B79CArn454F6B72"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "mtfsradbdevEmbeddingsProviderStack3C343CED:ExportsOutputFnGetAttEmbeddingsProviderFunction749E762AArn0A103CE4"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "mtfsradbdevIngestionProviderStack7EBE4178:ExportsOutputFnGetAttIngestionStatusProviderFunctionE9E064BFArn2D6E7177"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "mtfsradbdevPromptTemplateHandlerStack05579D4E:ExportsOutputFnGetAttPromptTemplateHandlerFunction2A6BF5FFArnCCEB5505"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "mtfsradbdevVectorStoreProviderStackD15A38D1:portsOutputFnGetAttOpenSearchManagedStackNestedStackOpenSearchManagedStackNestedStackResource253201F9OutputsmtfsradbdevVectorStoreProviderStackOpenSearchManagedStackVectorStoreProviderFunction71969801Arn911E4BA2"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "es:ESHttpGet",
        "es:ESHttpHead"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "mtfsradbdevVectorStoreProviderStackD15A38D1:ExportsOutputFnGetAttOpenSearchManagedStackNestedStackOpenSearchManagedStackNestedStackResource253201F9OutputsmtfsradbdevVectorStoreProviderStackOpenSearchManagedStackOsDomain26DE6D31Arn48511E48"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "mtfsradbdevVectorStoreProviderStackD15A38D1:ExportsOutputFnGetAttOpenSearchManagedStackNestedStackOpenSearchManagedStackNestedStackResource253201F9OutputsmtfsradbdevVectorStoreProviderStackOpenSearchManagedStackOsDomain26DE6D31Arn48511E48"
           },
           "/*/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerationHandlerFunctionServiceRoleDefaultPolicyD6730C32",
    "Roles": [
     {
      "Ref": "GenerationHandlerFunctionServiceRole191FABCF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerationHandlerFunction7E4CE896": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "601aa5b627c6cd66021ebea21d8bcadafa976351a444cfde7e78af235b62863c.zip"
    },
    "Environment": {
     "Variables": {
      "STACK_NAME": "mtfsrad-b-dev"
     }
    },
    "Handler": "multi_tenant_full_stack_rag_application.generation_handler.generation_handler.handler",
    "MemorySize": 768,
    "Role": {
     "Fn::GetAtt": [
      "GenerationHandlerFunctionServiceRole191FABCF",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 120,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "mtfsradbdevVpc39114410:ExportsOutputFnGetAttAppSecurityGroupC396D536GroupId4ECD26A6"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "mtfsradbdevVpc39114410:ExportsOutputRefVpcdataisolatedSubnet1SubnetEBF5BB657298517B"
      },
      {
       "Fn::ImportValue": "mtfsradbdevVpc39114410:ExportsOutputRefVpcdataisolatedSubnet2Subnet8AADF05A8CCED4C9"
      }
     ]
    }
   },
   "DependsOn": [
    "GenerationHandlerFunctionServiceRoleDefaultPolicyD6730C32",
    "GenerationHandlerFunctionServiceRole191FABCF"
   ],
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerFunction/Resource",
    "aws:asset:path": "asset.601aa5b627c6cd66021ebea21d8bcadafa976351a444cfde7e78af235b62863c",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GenerationHandlerApi69F9E661": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "generation",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerApi/Resource"
   }
  },
  "GenerationHandlerApiDefaultStage5B1553FC": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "GenerationHandlerApi69F9E661"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerApi/DefaultStage/Resource"
   }
  },
  "GenerationHandlerApiGETgenerationGenerationHandlerLambdaIntegration328895FF": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "GenerationHandlerApi69F9E661"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "GenerationHandlerFunction7E4CE896",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerApi/GET--generation/GenerationHandlerLambdaIntegration/Resource"
   }
  },
  "GenerationHandlerApiGETgenerationGenerationHandlerLambdaIntegrationPermission10C5AED1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GenerationHandlerFunction7E4CE896",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "GenerationHandlerApi69F9E661"
       },
       "/*/*/generation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerApi/GET--generation/GenerationHandlerLambdaIntegration-Permission"
   }
  },
  "GenerationHandlerApiGETgenerationC8404037": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "GenerationHandlerApi69F9E661"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "GenerationHandlerApiGenerationHandlerAuthorizerD333EE82"
    },
    "RouteKey": "GET /generation",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "GenerationHandlerApiGETgenerationGenerationHandlerLambdaIntegration328895FF"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerApi/GET--generation/Resource"
   }
  },
  "GenerationHandlerApiGenerationHandlerAuthorizerD333EE82": {
   "Type": "AWS::ApiGatewayV2::Authorizer",
   "Properties": {
    "ApiId": {
     "Ref": "GenerationHandlerApi69F9E661"
    },
    "AuthorizerType": "JWT",
    "IdentitySource": [
     "$request.header.Authorization"
    ],
    "JwtConfiguration": {
     "Audience": [
      {
       "Fn::ImportValue": "mtfsradbdevAuthProviderStackCCE112F5:ExportsOutputFnGetAttCognitoStackNestedStackCognitoStackNestedStackResource95DF2EBAOutputsmtfsradbdevAuthProviderStackCognitoStackUserPoolClient46E47A4DRefBE7BAD85"
      }
     ],
     "Issuer": {
      "Fn::Join": [
       "",
       [
        "https://cognito-idp.",
        {
         "Ref": "AWS::Region"
        },
        ".amazonaws.com/",
        {
         "Fn::ImportValue": "mtfsradbdevAuthProviderStackCCE112F5:ExportsOutputFnGetAttCognitoStackNestedStackCognitoStackNestedStackResource95DF2EBAOutputsmtfsradbdevAuthProviderStackCognitoStackUserPool42FCA09FRef3D901ACD"
        }
       ]
      ]
     }
    },
    "Name": "GenerationHandlerAuthorizer"
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerApi/GenerationHandlerAuthorizer/Resource"
   }
  },
  "GenerationHandlerApiPOSTgenerationGenerationHandlerLambdaIntegrationPermission09EBE7A8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GenerationHandlerFunction7E4CE896",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "GenerationHandlerApi69F9E661"
       },
       "/*/*/generation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerApi/POST--generation/GenerationHandlerLambdaIntegration-Permission"
   }
  },
  "GenerationHandlerApiPOSTgeneration2BD8378B": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "GenerationHandlerApi69F9E661"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "GenerationHandlerApiGenerationHandlerAuthorizerD333EE82"
    },
    "RouteKey": "POST /generation",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "GenerationHandlerApiGETgenerationGenerationHandlerLambdaIntegration328895FF"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerApi/POST--generation/Resource"
   }
  },
  "GenerationHandlerApiOPTIONSproxyGenerationHandlerLambdaIntegrationPermissionECA8EFB2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GenerationHandlerFunction7E4CE896",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "GenerationHandlerApi69F9E661"
       },
       "/*/*/{proxy+}"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerApi/OPTIONS--{proxy+}/GenerationHandlerLambdaIntegration-Permission"
   }
  },
  "GenerationHandlerApiOPTIONSproxy46348D0B": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "GenerationHandlerApi69F9E661"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "OPTIONS /{proxy+}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "GenerationHandlerApiGETgenerationGenerationHandlerLambdaIntegration328895FF"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerApi/OPTIONS--{proxy+}/Resource"
   }
  },
  "GenerationHandlerHttpApiUrlParam545B9410": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/mtfsrad-b-dev/generation_handler_api_url",
    "Type": "String",
    "Value": {
     "Fn::Join": [
      "",
      [
       "https://",
       {
        "Ref": "GenerationHandlerApi69F9E661"
       },
       ".execute-api.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       }
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerHttpApiUrlParam/Resource"
   }
  },
  "GenerationHandlerOriginParam790DC1BE": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/mtfsrad-b-dev/origin_generation_handler",
    "Type": "String",
    "Value": {
     "Ref": "GenerationHandlerFunction7E4CE896"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/GenerationHandlerOriginParam/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12QwU7DMAyGn2X3NNBOO3DsJiE4UXUPMHlpKF6bpEocplL13YlbNhCn//9iy7/jQua7Qj5u4Boy1XRZj2c5HQlUJ2odXPRKi1Q7TQhGTpXrUY3i8G5/XO16zcg6ix7MuQE5PUerCJ3lyl9faW8whESzCNsThKApyJIlsdxH1WnaQ0iRA7ZA+grjZyGnF6KhHJBHsDCmFdsleTX8VLtIq3u1pFsPt9h/+NtXRvpwHr+0X0bfKW0XDJ/Bo20r8GA0rT13mGex7M3xqYlrb5GGSEvC7XLJH5xtkJYvV2MKsA9bmefyaXMJiJmPltBoWa/6DSe3himOAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/GenerationHandlerApiStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "GenerationHandlerHttpApiUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "GenerationHandlerApi69F9E661"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}