{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/Resource"
   }
  },
  "VpcingressSubnet1Subnet059F22C6": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/21",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "ingress"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet1/Subnet"
   }
  },
  "VpcingressSubnet1RouteTable804C7A26": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet1/RouteTable"
   }
  },
  "VpcingressSubnet1RouteTableAssociation5DF54E70": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcingressSubnet1RouteTable804C7A26"
    },
    "SubnetId": {
     "Ref": "VpcingressSubnet1Subnet059F22C6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet1/RouteTableAssociation"
   }
  },
  "VpcingressSubnet1DefaultRoute4188A546": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcingressSubnet1RouteTable804C7A26"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet1/DefaultRoute"
   }
  },
  "VpcingressSubnet1EIPD1FA297B": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet1/EIP"
   }
  },
  "VpcingressSubnet1NATGateway5ADD866D": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcingressSubnet1EIPD1FA297B",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcingressSubnet1Subnet059F22C6"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcingressSubnet1DefaultRoute4188A546",
    "VpcingressSubnet1RouteTableAssociation5DF54E70"
   ],
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet1/NATGateway"
   }
  },
  "VpcingressSubnet2SubnetF175D754": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.8.0/21",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "ingress"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet2/Subnet"
   }
  },
  "VpcingressSubnet2RouteTable8B0E23A7": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet2/RouteTable"
   }
  },
  "VpcingressSubnet2RouteTableAssociation39E1BA3A": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcingressSubnet2RouteTable8B0E23A7"
    },
    "SubnetId": {
     "Ref": "VpcingressSubnet2SubnetF175D754"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet2/RouteTableAssociation"
   }
  },
  "VpcingressSubnet2DefaultRoute18203BC3": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcingressSubnet2RouteTable8B0E23A7"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet2/DefaultRoute"
   }
  },
  "VpcingressSubnet2EIP87470ECB": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet2/EIP"
   }
  },
  "VpcingressSubnet2NATGatewayDAA0F549": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcingressSubnet2EIP87470ECB",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcingressSubnet2SubnetF175D754"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VpcingressSubnet2DefaultRoute18203BC3",
    "VpcingressSubnet2RouteTableAssociation39E1BA3A"
   ],
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ingressSubnet2/NATGateway"
   }
  },
  "VpcdataisolatedSubnet1SubnetEBF5BB65": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.16.0/21",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "data_isolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/data_isolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/data_isolatedSubnet1/Subnet"
   }
  },
  "VpcdataisolatedSubnet1RouteTableE41FA6D1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/data_isolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/data_isolatedSubnet1/RouteTable"
   }
  },
  "VpcdataisolatedSubnet1RouteTableAssociation9FC079DD": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcdataisolatedSubnet1RouteTableE41FA6D1"
    },
    "SubnetId": {
     "Ref": "VpcdataisolatedSubnet1SubnetEBF5BB65"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/data_isolatedSubnet1/RouteTableAssociation"
   }
  },
  "VpcdataisolatedSubnet2Subnet8AADF05A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.24.0/21",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "data_isolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/data_isolatedSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/data_isolatedSubnet2/Subnet"
   }
  },
  "VpcdataisolatedSubnet2RouteTable9E59C5D8": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/data_isolatedSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/data_isolatedSubnet2/RouteTable"
   }
  },
  "VpcdataisolatedSubnet2RouteTableAssociation1D7C179B": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcdataisolatedSubnet2RouteTable9E59C5D8"
    },
    "SubnetId": {
     "Ref": "VpcdataisolatedSubnet2Subnet8AADF05A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/data_isolatedSubnet2/RouteTableAssociation"
   }
  },
  "VpcprivatewithegressSubnet1Subnet6268702B": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.32.0/21",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private_with_egress"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet1/Subnet"
   }
  },
  "VpcprivatewithegressSubnet1RouteTableA17E7188": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet1/RouteTable"
   }
  },
  "VpcprivatewithegressSubnet1RouteTableAssociationB4D9DE73": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcprivatewithegressSubnet1RouteTableA17E7188"
    },
    "SubnetId": {
     "Ref": "VpcprivatewithegressSubnet1Subnet6268702B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet1/RouteTableAssociation"
   }
  },
  "VpcprivatewithegressSubnet1DefaultRoute65436B1E": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcingressSubnet1NATGateway5ADD866D"
    },
    "RouteTableId": {
     "Ref": "VpcprivatewithegressSubnet1RouteTableA17E7188"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet1/DefaultRoute"
   }
  },
  "VpcprivatewithegressSubnet2Subnet3088D8AE": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.40.0/21",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private_with_egress"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet2/Subnet"
   }
  },
  "VpcprivatewithegressSubnet2RouteTable009DE8E8": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet2/RouteTable"
   }
  },
  "VpcprivatewithegressSubnet2RouteTableAssociationD03E441E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcprivatewithegressSubnet2RouteTable009DE8E8"
    },
    "SubnetId": {
     "Ref": "VpcprivatewithegressSubnet2Subnet3088D8AE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet2/RouteTableAssociation"
   }
  },
  "VpcprivatewithegressSubnet2DefaultRoute20C7AB0C": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcingressSubnet2NATGatewayDAA0F549"
    },
    "RouteTableId": {
     "Ref": "VpcprivatewithegressSubnet2RouteTable009DE8E8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/private_with_egressSubnet2/DefaultRoute"
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/IGW"
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/VPCGW"
   }
  },
  "VpcRestrictDefaultSecurityGroupCustomResourceC73DA2BE": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "Vpc8378EB38",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "VpcSsmEndpointSecurityGroup579ACE06": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "mtfsrad-b-dev/Vpc/Vpc/SsmEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/SsmEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcSsmEndpointC46DB833": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcSsmEndpointSecurityGroup579ACE06",
       "GroupId"
      ]
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".ssm"
      ]
     ]
    },
    "SubnetIds": [
     {
      "Ref": "VpcdataisolatedSubnet1SubnetEBF5BB65"
     },
     {
      "Ref": "VpcdataisolatedSubnet2Subnet8AADF05A"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/SsmEndpoint/Resource"
   }
  },
  "VpcDynamoDbEndpoint564903D1": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "RouteTableIds": [
     {
      "Ref": "VpcprivatewithegressSubnet1RouteTableA17E7188"
     },
     {
      "Ref": "VpcprivatewithegressSubnet2RouteTable009DE8E8"
     },
     {
      "Ref": "VpcingressSubnet1RouteTable804C7A26"
     },
     {
      "Ref": "VpcingressSubnet2RouteTable8B0E23A7"
     },
     {
      "Ref": "VpcdataisolatedSubnet1RouteTableE41FA6D1"
     },
     {
      "Ref": "VpcdataisolatedSubnet2RouteTable9E59C5D8"
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".dynamodb"
      ]
     ]
    },
    "VpcEndpointType": "Gateway",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/DynamoDbEndpoint/Resource"
   }
  },
  "VpcS3Endpoint4A3DE4B5": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "RouteTableIds": [
     {
      "Ref": "VpcprivatewithegressSubnet1RouteTableA17E7188"
     },
     {
      "Ref": "VpcprivatewithegressSubnet2RouteTable009DE8E8"
     },
     {
      "Ref": "VpcingressSubnet1RouteTable804C7A26"
     },
     {
      "Ref": "VpcingressSubnet2RouteTable8B0E23A7"
     },
     {
      "Ref": "VpcdataisolatedSubnet1RouteTableE41FA6D1"
     },
     {
      "Ref": "VpcdataisolatedSubnet2RouteTable9E59C5D8"
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".s3"
      ]
     ]
    },
    "VpcEndpointType": "Gateway",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/S3Endpoint/Resource"
   }
  },
  "VpcKmsEndpointSecurityGroup8D0DC328": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "mtfsrad-b-dev/Vpc/Vpc/KmsEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/KmsEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcKmsEndpoint9ED64100": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcKmsEndpointSecurityGroup8D0DC328",
       "GroupId"
      ]
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".kms"
      ]
     ]
    },
    "SubnetIds": [
     {
      "Ref": "VpcdataisolatedSubnet1SubnetEBF5BB65"
     },
     {
      "Ref": "VpcdataisolatedSubnet2Subnet8AADF05A"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/KmsEndpoint/Resource"
   }
  },
  "VpcBedrockEndpointSecurityGroupDBE9E8E4": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "mtfsrad-b-dev/Vpc/Vpc/BedrockEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/BedrockEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcBedrockEndpoint67430A7D": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcBedrockEndpointSecurityGroupDBE9E8E4",
       "GroupId"
      ]
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".bedrock"
      ]
     ]
    },
    "SubnetIds": [
     {
      "Ref": "VpcdataisolatedSubnet1SubnetEBF5BB65"
     },
     {
      "Ref": "VpcdataisolatedSubnet2Subnet8AADF05A"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/BedrockEndpoint/Resource"
   }
  },
  "VpcBedrockAgentEndpointSecurityGroup708F7B58": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "mtfsrad-b-dev/Vpc/Vpc/BedrockAgentEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/BedrockAgentEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcBedrockAgentEndpoint762FC9DE": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcBedrockAgentEndpointSecurityGroup708F7B58",
       "GroupId"
      ]
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".bedrock-agent"
      ]
     ]
    },
    "SubnetIds": [
     {
      "Ref": "VpcdataisolatedSubnet1SubnetEBF5BB65"
     },
     {
      "Ref": "VpcdataisolatedSubnet2Subnet8AADF05A"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/BedrockAgentEndpoint/Resource"
   }
  },
  "VpcBedrockAgentRuntimeEndpointSecurityGroupD3DB6383": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "mtfsrad-b-dev/Vpc/Vpc/BedrockAgentRuntimeEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/BedrockAgentRuntimeEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcBedrockAgentRuntimeEndpoint70FA5CF0": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcBedrockAgentRuntimeEndpointSecurityGroupD3DB6383",
       "GroupId"
      ]
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".bedrock-agent-runtime"
      ]
     ]
    },
    "SubnetIds": [
     {
      "Ref": "VpcdataisolatedSubnet1SubnetEBF5BB65"
     },
     {
      "Ref": "VpcdataisolatedSubnet2Subnet8AADF05A"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/BedrockAgentRuntimeEndpoint/Resource"
   }
  },
  "VpcBedrockRuntimeEndpointSecurityGroup995CB55B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "mtfsrad-b-dev/Vpc/Vpc/BedrockRuntimeEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "mtfsrad-b-dev/Vpc/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/BedrockRuntimeEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcBedrockRuntimeEndpoint726DDE28": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcBedrockRuntimeEndpointSecurityGroup995CB55B",
       "GroupId"
      ]
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".bedrock-runtime"
      ]
     ]
    },
    "SubnetIds": [
     {
      "Ref": "VpcdataisolatedSubnet1SubnetEBF5BB65"
     },
     {
      "Ref": "VpcdataisolatedSubnet2Subnet8AADF05A"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/BedrockRuntimeEndpoint/Resource"
   }
  },
  "VpcApigwEndpoint59F0A64A": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "AppSecurityGroupC396D536",
       "GroupId"
      ]
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".execute-api"
      ]
     ]
    },
    "SubnetIds": [
     {
      "Ref": "VpcdataisolatedSubnet1SubnetEBF5BB65"
     },
     {
      "Ref": "VpcdataisolatedSubnet2Subnet8AADF05A"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/ApigwEndpoint/Resource"
   }
  },
  "VpcLambdaEndpointB3C850C4": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "AppSecurityGroupC396D536",
       "GroupId"
      ]
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".lambda"
      ]
     ]
    },
    "SubnetIds": [
     {
      "Ref": "VpcdataisolatedSubnet1SubnetEBF5BB65"
     },
     {
      "Ref": "VpcdataisolatedSubnet2Subnet8AADF05A"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/LambdaEndpoint/Resource"
   }
  },
  "VpcSqsEndpointF1A4587A": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "AppSecurityGroupC396D536",
       "GroupId"
      ]
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".sqs"
      ]
     ]
    },
    "SubnetIds": [
     {
      "Ref": "VpcdataisolatedSubnet1SubnetEBF5BB65"
     },
     {
      "Ref": "VpcdataisolatedSubnet2Subnet8AADF05A"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Vpc/SqsEndpoint/Resource"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "Vpc8378EB38",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a",
    "aws:asset:property": "Code"
   }
  },
  "AppSecurityGroupC396D536": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "mtfsrad-b-dev/Vpc/AppSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":ALL TRAFFIC"
        ]
       ]
      },
      "IpProtocol": "-1"
     },
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "127.0.0.1/32",
      "Description": "from 127.0.0.1/32:443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/AppSecurityGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12QwW7CMBBEv4W74zapOPRII4Q4tFhJxbVynA1sSWzLXoMixL/XCZQgTjv7NBrNbsbTecZfZ/LkE1UfkhYrfi5JqgOL6AdUxs9bq1je6K3ImQhVi6oMlQYa2KQKEwi+ZdXCxCe28N4olIRG382DWK7FML4krSTBSfZMODxGOQWvNYGL+t9wbXLbFhSr7jvQxEZfIxXEuktdW4MRlqCCQ+pXzgQ7FnsGMevuvoU+BFxYAd4Ep2Lb4Ml00xqveNCf0lrUuyeXcOaINbgP6YHFHwDF1+5GX6M3gWwYT8yNrnH4zYWJnvZGv7zxNOXvs1+PmLigCTvgxXX+AWa4noyyAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "mtfsrad-b-dev/Vpc/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Outputs": {
  "SsmVpcEndpoint": {
   "Value": {
    "Ref": "VpcSsmEndpointC46DB833"
   }
  },
  "ExportsOutputRefVpcprivatewithegressSubnet1Subnet6268702BC3D928D6": {
   "Value": {
    "Ref": "VpcprivatewithegressSubnet1Subnet6268702B"
   },
   "Export": {
    "Name": "mtfsradbdevVpc39114410:ExportsOutputRefVpcprivatewithegressSubnet1Subnet6268702BC3D928D6"
   }
  },
  "ExportsOutputRefVpcprivatewithegressSubnet2Subnet3088D8AE74813843": {
   "Value": {
    "Ref": "VpcprivatewithegressSubnet2Subnet3088D8AE"
   },
   "Export": {
    "Name": "mtfsradbdevVpc39114410:ExportsOutputRefVpcprivatewithegressSubnet2Subnet3088D8AE74813843"
   }
  },
  "ExportsOutputFnGetAttAppSecurityGroupC396D536GroupId4ECD26A6": {
   "Value": {
    "Fn::GetAtt": [
     "AppSecurityGroupC396D536",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "mtfsradbdevVpc39114410:ExportsOutputFnGetAttAppSecurityGroupC396D536GroupId4ECD26A6"
   }
  },
  "ExportsOutputRefVpc8378EB38272D6E3A": {
   "Value": {
    "Ref": "Vpc8378EB38"
   },
   "Export": {
    "Name": "mtfsradbdevVpc39114410:ExportsOutputRefVpc8378EB38272D6E3A"
   }
  },
  "ExportsOutputRefVpcdataisolatedSubnet1SubnetEBF5BB657298517B": {
   "Value": {
    "Ref": "VpcdataisolatedSubnet1SubnetEBF5BB65"
   },
   "Export": {
    "Name": "mtfsradbdevVpc39114410:ExportsOutputRefVpcdataisolatedSubnet1SubnetEBF5BB657298517B"
   }
  },
  "ExportsOutputRefVpcdataisolatedSubnet2Subnet8AADF05A8CCED4C9": {
   "Value": {
    "Ref": "VpcdataisolatedSubnet2Subnet8AADF05A"
   },
   "Export": {
    "Name": "mtfsradbdevVpc39114410:ExportsOutputRefVpcdataisolatedSubnet2Subnet8AADF05A8CCED4C9"
   }
  },
  "ExportsOutputRefVpcingressSubnet1Subnet059F22C68B714600": {
   "Value": {
    "Ref": "VpcingressSubnet1Subnet059F22C6"
   },
   "Export": {
    "Name": "mtfsradbdevVpc39114410:ExportsOutputRefVpcingressSubnet1Subnet059F22C68B714600"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}